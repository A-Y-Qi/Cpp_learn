//
//  main.cpp
//  05_2DArray
//
//  Created by Yuelin Qi on 2022-12-07.
//

#include <iostream>
using namespace std;

int main(int argc, const char * argv[]) {
    /*
     1. 数据类型 数组名[行数][列数]；
     2. 数据类型 数组名[行数][列数] = {{数据1，数据2}，{数据3，数据4}};
     3. 数据类型 数组名[行数][列数] = {数据1，数据2，数据3，数据4};
     4. 数据类型 数组名[][列数] = {数据1，数据2，数据3，数据4};
     */
    // 1. 数据类型 数组名[行数][列数]；
    int arr[2][3];
    arr[0][0] = 1;
    arr[0][1] = 2;
    arr[0][2] = 3;
    arr[1][0] = 4;
    arr[1][1] = 5;
    arr[1][2] = 6;
    
    //2. 数据类型 数组名[行数][列数] = {{数据1，数据2}，{数据3，数据4}};
    int arr2[2][3]={
        {1,2,3},
        {4,5,6}
    };
    
    //3. 数据类型 数组名[行数][列数] = {数据1，数据2，数据3，数据4};
    int arr3[2][3] = {1,2,3,4,5,6};
    for (int i = 0; i < 2; i++){
        for (int j = 0; j<3;j++){
            cout << arr3[i][j]<<"\t";
        }
        cout << endl;
    }
    
    //4. 数据类型 数组名[][列数] = {数据1，数据2，数据3，数据4};
    int arr4[][3] = {1,2,3,4,5,6}; //可省去行数，不可以省去列数
    
    
    
    // 二维数组名称用途
    // 1. 可以查看占用内存空间大小
    cout<<"二维数组占用内存空间为："<<sizeof(arr)<<endl; //根据数据类型和数据量有所不同
    cout<<"二维数组第一行占用内存空间为："<<sizeof(arr[0])<<endl;
    cout<<"二维数组第一个元素占用内存空间为："<<sizeof(arr[0][0])<<endl;
    
    cout<<"二维数组行数为："<<sizeof(arr)/sizeof(arr[0])<<endl;
    cout<<"二维数组列数为："<<sizeof(arr[0])/sizeof(arr[0][0])<<endl;
    
    // 2. 可以查看二维数组的首地址
    cout<<"二维数组首地址为"<<(long)arr<<endl;
    cout<<"二维数组第一行首地址为"<<(long)arr[0]<<endl;
    cout<<"二维数组第二行首地址为"<<(long)arr[1]<<endl;
    
    cout<<"二维数组第个元素首地址为"<<(long)&arr[0][1]<<endl;

    
    
    
    
    
    
    
    return 0;
}
